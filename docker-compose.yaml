version: '3.7'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"  
      - "xpack.security.enabled=false"    
    ports:
      - "9200:9200"                        
    networks:
      - es-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]  
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 20s
    deploy:
      resources:
        limits:
          memory: 512M  
        reservations:
          memory: 256M  
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data  

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  
    ports:
      - "5601:5601"  
    networks:
      - es-net
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          memory: 512M  
        reservations:
          memory: 256M  
    volumes:
      - kibana_data:/usr/share/kibana/data  
  
  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"  # Redis default port
    networks:
      - es-net
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]  # Enable AOF persistence
  
  search_service:
    build:
      context: .
      dockerfile: Dockerfile  # Change this line to build the app from your Dockerfile
    container_name: search_service
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch:9200  # Link to your Elasticsearch service
    ports:
      - "80:80"  # Expose FastAPI app on port 8000
    depends_on:
      - elasticsearch
      - redis
    networks:
      - es-net
    command: ["./run.sh"] 



networks:
  es-net:
    driver: bridge

volumes:
  elasticsearch_data:  
  kibana_data:  
  